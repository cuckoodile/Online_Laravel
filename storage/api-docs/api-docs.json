{
    "openapi": "3.0.0",
    "info": {
        "title": "Online Laravel API",
        "description": "API documentation for your Laravel project",
        "contact": {
            "email": "your@email.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "yourpassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "token": {
                                            "type": "string"
                                        },
                                        "profile": {
                                            "type": "object"
                                        },
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User logout",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get current authenticated user",
                "operationId": "c6f3c3fa22f9f6eb8d9d7be5b8eae232",
                "responses": {
                    "200": {
                        "description": "User has been retrieved"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/banner": {
            "get": {
                "tags": [
                    "Banner"
                ],
                "summary": "Get all banner images",
                "operationId": "a0384ebeb68b0f3fc777b044b6626a10",
                "responses": {
                    "200": {
                        "description": "List of images was retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BannerImage"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Banner"
                ],
                "summary": "Upload a new banner image",
                "operationId": "6ebd857b2ead834502e9a3f98dfc285d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "Banner image file",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Banner image uploaded successfully."
                    },
                    "400": {
                        "description": "No image was uploaded."
                    }
                }
            }
        },
        "/api/banner/{id}": {
            "get": {
                "tags": [
                    "Banner"
                ],
                "summary": "Get a specific banner image by ID",
                "operationId": "765ee367b174285204a6f3d4ebb2e6a9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image was retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BannerImage"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No image found!"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Banner"
                ],
                "summary": "Delete a banner image",
                "operationId": "88919ffcfdaa13e4642532a8eaa15349",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Banner image deleted successfully."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Banner"
                ],
                "summary": "Update a banner image",
                "operationId": "e513bf72aeaf1006c41edcd1f0718365",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "Banner image file",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Banner image updated successfully."
                    }
                }
            }
        },
        "/api/carts": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get all cart items for the authenticated user",
                "operationId": "53ab796e0e0f63a406263bdf2c78ecfe",
                "responses": {
                    "200": {
                        "description": "List of cart items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Cart"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No items in the cart"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add a product to the cart",
                "operationId": "91e0eee9a17271043eb5c78e9acf3429",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product added to cart"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/carts/{id}": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get a specific cart item by ID for the authenticated user",
                "operationId": "a93eb27c9094ca21a85a884e677f37bc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart item found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart item not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Delete a cart item",
                "operationId": "aa30d6d502681037a643f90534b6c1e3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart item has been deleted"
                    },
                    "404": {
                        "description": "Cart item not found or does not belong to the user"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update the quantity of a cart item",
                "operationId": "41b7b9459433d7f71767ae8786dd4772",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "quantity"
                                ],
                                "properties": {
                                    "quantity": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cart item has been updated"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Cart item not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get all categories",
                "operationId": "f7bb7e1d34840af6be09c403129b9fd3",
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create a new category",
                "operationId": "ee17f4e301ed2ea2d1aee7a3481ecd30",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Electronics"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get a specific category by ID",
                "operationId": "dcec14990b10d1eabe683fd13f35df02",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete a category",
                "operationId": "a65a644879b80ca5d53cca9ad8ee6b20",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Category"
                ],
                "summary": "Update a category",
                "operationId": "84d78fdd928d0b744863590d26411030",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Category"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/prices": {
            "get": {
                "tags": [
                    "PriceRange"
                ],
                "summary": "Get all price ranges",
                "operationId": "9837ef2c9c51a340ac5e7d5d5f0637d8",
                "responses": {
                    "200": {
                        "description": "List of price ranges",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PriceRange"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "PriceRange"
                ],
                "summary": "Create a new price range",
                "operationId": "d30f42ec5a6d78922d8e67657bf7f731",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "price"
                                ],
                                "properties": {
                                    "price": {
                                        "type": "integer",
                                        "example": 1000
                                    },
                                    "timestamp": {
                                        "type": "string",
                                        "example": "2024-01-01 12:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Price range created"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/prices/{id}": {
            "get": {
                "tags": [
                    "PriceRange"
                ],
                "summary": "Get a specific price range by ID",
                "operationId": "26c4b2fbe2e2dd6b466533f423e61c07",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Price range found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PriceRange"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Price range not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PriceRange"
                ],
                "summary": "Delete a price range",
                "operationId": "e1ccb79a4131910be88cd1a7f5ce61bc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Price range deleted"
                    },
                    "404": {
                        "description": "Price range not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "PriceRange"
                ],
                "summary": "Update a price range",
                "operationId": "c90f8aab5e3782aa08765d09a51d2fb5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "price": {
                                        "type": "integer",
                                        "example": 1500
                                    },
                                    "timestamp": {
                                        "type": "string",
                                        "example": "2024-01-01 12:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Price range updated"
                    },
                    "404": {
                        "description": "Price range not found"
                    }
                }
            }
        },
        "/api/comments": {
            "get": {
                "tags": [
                    "ProductComment"
                ],
                "summary": "Get all comments for a product",
                "operationId": "4722fa21da98c0ebbc2bde7ad5c6a427",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of comments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProductComment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing product_id"
                    },
                    "404": {
                        "description": "No comments found for the product"
                    }
                }
            },
            "post": {
                "tags": [
                    "ProductComment"
                ],
                "summary": "Create a new comment for a product",
                "operationId": "baa430b52daca2279e6b52aa964ac856",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "user_id",
                                    "comment",
                                    "rating"
                                ],
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "comment": {
                                        "type": "string",
                                        "example": "Great product!"
                                    },
                                    "rating": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "comment_id": {
                                        "type": "integer",
                                        "example": null,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment created"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/comments/{productId}/{commentId}": {
            "get": {
                "tags": [
                    "ProductComment"
                ],
                "summary": "Get a specific comment by product and comment ID",
                "operationId": "c926f315c74b857ae3d844fd7c60ee25",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "commentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductComment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                }
            }
        },
        "/api/comments/{id}": {
            "delete": {
                "tags": [
                    "ProductComment"
                ],
                "summary": "Delete a comment",
                "operationId": "9ba6f46c17a75e99eecf7baef0bf72da",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "ProductComment"
                ],
                "summary": "Update a comment",
                "operationId": "2587f1dbc132568148e81265b0c8d94b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "type": "integer"
                                    },
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "comment": {
                                        "type": "string"
                                    },
                                    "rating": {
                                        "type": "integer"
                                    },
                                    "comment_id": {
                                        "type": "integer",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment updated"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/reviewsCount": {
            "get": {
                "tags": [
                    "ProductComment"
                ],
                "summary": "Get total number of reviews",
                "operationId": "08f3e6f4a2a0ba1d2a8c1d71714f53bd",
                "responses": {
                    "200": {
                        "description": "Total reviews count"
                    }
                }
            }
        },
        "/api/aveRate": {
            "get": {
                "tags": [
                    "ProductComment"
                ],
                "summary": "Get average rating for all products",
                "operationId": "d605663d68a0c19ab1a4446f631d8e90",
                "responses": {
                    "200": {
                        "description": "Average rating"
                    }
                }
            }
        },
        "/api/rateCount": {
            "get": {
                "tags": [
                    "ProductComment"
                ],
                "summary": "Get count of each rating value for a product",
                "operationId": "8f3354f6e4f3b2fa320ddb82b9c95e25",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rating counts"
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get all products",
                "operationId": "24c51a4469fbe1d6ef9c4d258e31bbf3",
                "responses": {
                    "200": {
                        "description": "List of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Create a new product",
                "operationId": "7e28dda3b3c86a24822b81cb1a157d36",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "product_image",
                                    "price",
                                    "description",
                                    "category_id",
                                    "product_specifications",
                                    "stock"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Sample Product"
                                    },
                                    "product_image": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Product description"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_specifications": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "details": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get a specific product by ID",
                "operationId": "cb2c89d035ecc6d96016d33a0b4c619d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete a product",
                "operationId": "5f08571105d0afd4277c312358ed805d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Product"
                ],
                "summary": "Update a product",
                "operationId": "1f52fc072f90451f0ed4bdf3f12e89cf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "product_image": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "category_id": {
                                        "type": "integer"
                                    },
                                    "product_specifications": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "details": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "stock": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/specifications": {
            "get": {
                "tags": [
                    "ProductSpecification"
                ],
                "summary": "Get all product specifications",
                "operationId": "b854ea6dd6b85d533be0ef01dff11ce5",
                "responses": {
                    "200": {
                        "description": "List of product specifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProductSpecification"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ProductSpecification"
                ],
                "summary": "Create a new product specification",
                "operationId": "5cda4c0adfcefc525faec32448c66571",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "details"
                                ],
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "details": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Color: Red"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product Specification has been created"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/specifications/{id}": {
            "get": {
                "tags": [
                    "ProductSpecification"
                ],
                "summary": "Get a specific product specification by ID",
                "operationId": "dfa1a0b20191c2ed44566c27e731ac39",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product specification found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductSpecification"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product Specification not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ProductSpecification"
                ],
                "summary": "Delete a product specification",
                "operationId": "74cb4bb3d33fb078e2efac663c018cb0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product Specification has been deleted"
                    },
                    "404": {
                        "description": "Product Specification not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "ProductSpecification"
                ],
                "summary": "Update a product specification",
                "operationId": "534b51449711560a7f3ef1d6d7218c1c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "details": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Color: Blue"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product Specification has been updated"
                    },
                    "404": {
                        "description": "Product Specification not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/transactions": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get all transactions",
                "operationId": "7ebc52e13a9e89a5d5c4aa9b414c6031",
                "responses": {
                    "200": {
                        "description": "List of transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Transaction"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No transactions found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Create a new transaction",
                "operationId": "d45d0fa240720cd216347f2736487912",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payment_method_id",
                                    "type_id",
                                    "status_id",
                                    "address_id",
                                    "products"
                                ],
                                "properties": {
                                    "payment_method_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "address_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transaction created"
                    },
                    "400": {
                        "description": "Validation error or insufficient stock"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/transactions/{id}": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get a specific transaction by ID",
                "operationId": "c664fe6a4fd94c66cc25d5d303a449ed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Delete a transaction",
                "operationId": "bc79d282f85bdd8fe595e4d1e07c9698",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction deleted"
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Update a transaction",
                "operationId": "004da2597cbb20bb087669c461d4921f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "payment_method_id": {
                                        "type": "integer"
                                    },
                                    "type_id": {
                                        "type": "integer"
                                    },
                                    "status_id": {
                                        "type": "integer"
                                    },
                                    "cart_id": {
                                        "type": "integer"
                                    },
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "address_id": {
                                        "type": "integer"
                                    },
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer"
                                                },
                                                "quantity": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transaction updated"
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/transactions/payment": {
            "get": {
                "tags": [
                    "TransactionPaymentMethod"
                ],
                "summary": "Get all transaction payment methods",
                "operationId": "78c628e6fa69aa619ae5e7c62f902c82",
                "responses": {
                    "200": {
                        "description": "List of payment methods",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TransactionPaymentMethod"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TransactionPaymentMethod"
                ],
                "summary": "Reference an existing transaction payment method by name",
                "operationId": "c6a78f0e8eafc8edc49f4a1507db74e9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Gcash"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transaction Payment Method has been referenced successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/transactions/payment/{id}": {
            "get": {
                "tags": [
                    "TransactionPaymentMethod"
                ],
                "summary": "Get a specific transaction payment method by ID",
                "operationId": "7290c70f8c3f0bfc3647663e34475a9d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment method found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionPaymentMethod"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction Payment Method not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "TransactionPaymentMethod"
                ],
                "summary": "Delete a transaction payment method",
                "operationId": "34cf80ca4a234093efe1f3b3c908039c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction Payment Method has been deleted"
                    },
                    "404": {
                        "description": "Transaction Payment Method not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "TransactionPaymentMethod"
                ],
                "summary": "Update a transaction payment method",
                "operationId": "c50f244986167735292717518a202ef3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Debit or Credit Cards"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transaction Payment Method has been updated successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Transaction Payment Method not found"
                    }
                }
            }
        },
        "/api/transactions/status": {
            "get": {
                "tags": [
                    "TransactionStatus"
                ],
                "summary": "Get all transaction statuses",
                "operationId": "9e0e0fb908be47f0909c05475dbed0a4",
                "responses": {
                    "200": {
                        "description": "List of transaction statuses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TransactionStatus"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TransactionStatus"
                ],
                "summary": "Reference an existing transaction status by name",
                "operationId": "54fcf80dd6636c89b22ce6cdb8c9e81e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "pending"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transaction Status has been referenced successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/transactions/status/{id}": {
            "get": {
                "tags": [
                    "TransactionStatus"
                ],
                "summary": "Get a specific transaction status by ID",
                "operationId": "16c3a20ef25793d75015e89352c9445c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction status found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionStatus"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction Status not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "TransactionStatus"
                ],
                "summary": "Delete a transaction status",
                "operationId": "4ea726684371e4987feb243280747229",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction Status has been deleted"
                    },
                    "404": {
                        "description": "Transaction Status not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "TransactionStatus"
                ],
                "summary": "Update a transaction status",
                "operationId": "7339c98b625ab7e3306462bc03ad5f98",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "delivered"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transaction Status has been updated successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Transaction Status not found"
                    }
                }
            }
        },
        "/api/transactions/type": {
            "get": {
                "tags": [
                    "TransactionType"
                ],
                "summary": "Get all transaction types",
                "operationId": "a25825ed56ba56815286f3f937ffbce9",
                "responses": {
                    "200": {
                        "description": "List of transaction types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TransactionType"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TransactionType"
                ],
                "summary": "Reference an existing transaction type by name",
                "operationId": "6f180900c9a35176808e0ff18c402a03",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "delivery"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transaction Type has been referenced successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/transactions/type/{id}": {
            "get": {
                "tags": [
                    "TransactionType"
                ],
                "summary": "Get a specific transaction type by ID",
                "operationId": "f1c633736f65a615b14534821424db84",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction type found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction Type not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "TransactionType"
                ],
                "summary": "Delete a transaction type",
                "operationId": "5af4bb0141446f0563305926a31f02a4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction Type has been deleted"
                    },
                    "404": {
                        "description": "Transaction Type not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "TransactionType"
                ],
                "summary": "Update a transaction type",
                "operationId": "69e07cb4e9565e8b108f9d07e846ce3c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "pickup"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transaction Type has been updated successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Transaction Type not found"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "operationId": "1ad1cf4ffbfc84b02284335bdd828008",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register a new user",
                "operationId": "739d65077b36909e55dc4554bf589021",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "username",
                                    "email",
                                    "contact_number",
                                    "is_admin",
                                    "password"
                                ],
                                "properties": {
                                    "profile_image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@email.com"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "09123456789"
                                    },
                                    "is_admin": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a specific user by ID",
                "operationId": "eeae1fc3107530313912d633e729836f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "operationId": "7bd824f40b18952d31a49f8e446f806c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update a user",
                "operationId": "faef1fb8fbfc8b4df39be72a36a713f1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "profile_image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "contact_number": {
                                        "type": "string"
                                    },
                                    "is_admin": {
                                        "type": "boolean"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "BannerImage": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "image": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Cart": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "product_id": {
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "total_price": {
                        "type": "number",
                        "format": "float"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    }
                },
                "type": "object"
            },
            "Category": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Product"
                        }
                    }
                },
                "type": "object"
            },
            "PriceRange": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ProductComment": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "product_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "integer"
                    },
                    "comment_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Product": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "product_image": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    },
                    "description": {
                        "type": "string"
                    },
                    "category_id": {
                        "type": "integer"
                    },
                    "product_specifications": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "stock": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ProductSpecification": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "product_id": {
                        "type": "integer"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Transaction": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "payment_method_id": {
                        "type": "integer"
                    },
                    "type_id": {
                        "type": "integer"
                    },
                    "status_id": {
                        "type": "integer"
                    },
                    "address_id": {
                        "type": "integer"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Product"
                        }
                    },
                    "total": {
                        "type": "number",
                        "format": "float"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TransactionPaymentMethod": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TransactionStatus": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TransactionType": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "contact_number": {
                        "type": "string"
                    },
                    "is_admin": {
                        "type": "boolean"
                    },
                    "profile_image": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter token in format (Bearer <token>)",
                "scheme": "bearer",
                "bearerFormat": "base64",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Banner",
            "description": "Banner"
        },
        {
            "name": "Cart",
            "description": "Cart"
        },
        {
            "name": "Category",
            "description": "Category"
        },
        {
            "name": "PriceRange",
            "description": "PriceRange"
        },
        {
            "name": "ProductComment",
            "description": "ProductComment"
        },
        {
            "name": "Product",
            "description": "Product"
        },
        {
            "name": "ProductSpecification",
            "description": "ProductSpecification"
        },
        {
            "name": "Transaction",
            "description": "Transaction"
        },
        {
            "name": "TransactionPaymentMethod",
            "description": "TransactionPaymentMethod"
        },
        {
            "name": "TransactionStatus",
            "description": "TransactionStatus"
        },
        {
            "name": "TransactionType",
            "description": "TransactionType"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}